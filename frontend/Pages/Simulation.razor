@page "/"
@inject HttpClient Http

<h1>Simulation</h1>

<p>Perform a simple simulation of the COVID disease </p>

<div>
    @* Initial population <input type="number" min="1" @onchange="IncrementCount" /> *@
    <div>
        Initial population = @InitialPopulation
    </div>
    <div>
        <input
            type="range"
            min="0"
            max="@UInt32.MaxValue"
            step="1"
            @bind="InitialPopulation"
            @bind:event="oninput"
            @onchange="HandleGlobalPopulationChange"
        />
    </div>
</div>
<div>
    <div>
        Initial sick people = @InitialSickPeople / @InitialPopulation
    </div>
    <div>
        <input
            type="range"
            min="0"
            max="@InitialPopulation"
            step="1"
            @bind="InitialSickPeople"
            @bind:event="oninput"
        />
    </div>
</div>
<div>
    <div>
        Time Scale = @TimeScale
    </div>
    <div>
        <input
            type="range"
            min="0"
            max="100"
            step="0.1"
            @bind="TimeScale"
            @bind:event="oninput"
        />
    </div>
</div>
<div>
<p>Number of cores @(simulation == null ? "unknown" : World.NumberOfCores.ToString())</p>
</div>
<div>
    <button type="button" @onclick="StartSimulation">START</button>
    <button type="button" @onclick="StartSimulation">STOP</button>
    <button type="button" @onclick="StartSimulation">PAUSE</button>
</div>


@code {
    private List<EntityOnMap> mapItems;
    private World simulation;
    private uint InitialPopulation { get; set; } = 10000;
    private uint InitialSickPeople { get; set; } = 10;
    private float TimeScale { get; set; } = 1f;

    void HandleGlobalPopulationChange(ChangeEventArgs e)
    {
        if (uint.TryParse((string)e.Value, out var value))
        {
            if (value < InitialSickPeople) {
                InitialSickPeople = value;
            }
        }
    }

    void StartSimulation() {
        simulation = new World(InitialPopulation - InitialSickPeople, InitialSickPeople, TimeScale);
    }
}
